---
- name: systemd-reload
  systemd:
    daemon-reload: yes
    name: nexus.service

- name: nexus systemd service restart
  systemd:
    name: nexus.service
    state: restarted
    no_block: yes
  listen: nexus-service-restart
  when: "ansible_service_mgr == 'systemd'"

- name: nexus sysv service restart
  service:
    name: nexus
    state: restarted
  listen: nexus-service-restart
  when: "ansible_service_mgr != 'systemd'"

- name: nexus systemd service stop
  systemd:
    name: nexus.service
    state: stopped
  listen: nexus-service-stop
  when: nexus_systemd_service_file.stat.exists

- name: nexus sysv service stop
  service:
    name: nexus
    state: stopped
  listen: nexus-service-stop
  when: nexus_sysv_service_file.stat.exists

- name: Create tempfile for log tailing
  tempfile:
    state: file
  register: tempfile
  listen: wait-for-nexus

- name: Asynchronous tail log to temp file {{ tempfile.path }}
  shell: tail -n 0 -f "{{ nexus_data_dir }}/log/nexus.log" > {{ tempfile.path }}
  async: 1800ÃŸ
  poll: 0
  listen: wait-for-nexus

- name: Wait for regex in log
  wait_for:
    path: "{{ tempfile.path }}"
    search_regex: "Started Sonatype Nexus .*"
    timeout: 1800
  listen: wait-for-nexus

- name: Remove tempfile
  file:
    path: "{{ tempfile.path }}"
    state: absent
  listen: wait-for-nexus

- name: wait-for-nexus-port
  wait_for:
    port: "{{ nexus_default_port }}"
    timeout: "{{ nexus_wait_for_port_timeout | default(omit) }}"
  retries: "{{ nexus_wait_for_port_retries | default(omit) }}"
  register: wait_for_result
  until: wait_for_result is success

- name: httpd-service-reload
  systemd:
    name: "{{ httpd_package_name }}.service"
    state: reloaded
    enabled: yes
    no_block: yes

- name: wait-for-httpd
  wait_for:
    port: 443
    delay: 5
