---
- name: Get rest API endpoint (v < 3.8.0)
  set_fact:
    nexus_rest_api_endpoint: "service/siesta/rest/v1/script"
  when: nexus_version is version_compare('3.8.0', '<')

- name: Get rest API endpoint (v >= 3.8.0)
  set_fact:
    nexus_rest_api_endpoint: "service/rest/v1/script"
  when: nexus_version is version_compare('3.8.0', '>=')

- name: Access scripts API endpoint with defined admin password
  uri:
    url: "{{ nexus_api_scheme }}://{{ nexus_api_hostname }}:{{ nexus_api_port }}\
      {{ nexus_api_context_path }}{{ nexus_rest_api_endpoint }}"
    method: 'HEAD'
    user: 'admin'
    password: "{{ nexus_admin_password }}"
    force_basic_auth: yes
    status_code: 200, 401
    validate_certs: "{{ nexus_api_validate_certs }}"
  register: nexus_api_head_with_defined_password
  check_mode: no

- name: Register defined admin password for next operations
  set_fact:
    current_nexus_admin_password: "{{ nexus_admin_password }}"
  when: nexus_api_head_with_defined_password.status == 200
  no_log: true
- name: Force (re-)registration of groovy scripts (purge reference dir)
  file:
    path: "{{ nexus_data_dir }}/groovy-raw-scripts"
    state: absent
  when: nexus_force_groovy_scripts_registration | default(false)

- name: Create directories to hold current groovy scripts for reference
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
    - "{{ nexus_data_dir }}/groovy-raw-scripts/current"
    - "{{ nexus_data_dir }}/groovy-raw-scripts/new"

- name: Archive scripts
  become: no
  archive:
    path: "{{ role_path }}/files/groovy/*"
    dest: "/tmp/nexus-upload-groovy-scripts.tar.gz"
    mode: 0644
  run_once: true
  delegate_to: localhost

- name: Upload new scripts
  unarchive:
    src: "/tmp/nexus-upload-groovy-scripts.tar.gz"
    dest: "{{ nexus_data_dir }}/groovy-raw-scripts/new/"
    mode: 0644

- block:
    - name: Sync new scripts to old and get differences
      shell: >
        set -o pipefail &&
        rsync -ric {{ nexus_data_dir }}/groovy-raw-scripts/new/ {{ nexus_data_dir }}/groovy-raw-scripts/current/
        | cut -d" " -f 2 | sed "s/\.groovy//g"
      register: nexus_groovy_files_changed
      check_mode: no
      changed_when: false
      # simple check on changed files kept on host
      # skip ansible lint (we don't want to use synchronize module for this)
      args:
        warn: false
        executable: /bin/bash
  rescue:
    - name: Fail with information on rsync error
      fail:
        msg: >-
          A task involving running rsync on the host just failed, most probably because rsync is not installed.
          Please make sure rsync is installed on your host or double check the above error and try again.

- name: Declare new or changed groovy scripts in nexus
  include_tasks: declare_script_each.yml
  with_items: "{{ nexus_groovy_files_changed.stdout_lines }}"

- name: define cac_changes
  set_fact:
    cac_changes: []
  check_mode: no

- name: CasC users
  include_tasks: call_cac_script.yml
  vars:
    script_name: cac_users
    args: "{{ { 'dry_run': ansible_check_mode } | combine ( { 'details': nexus_local_users } ) }}"
  when: nexus_local_users | length > 0

- name: CasC roles
  include_tasks: call_cac_script.yml
  vars:
    script_name: cac_roles
    args: "{{ { 'dry_run': ansible_check_mode } | combine ( { 'details': nexus_roles } ) }}"
  when: nexus_roles | length > 0

- name: CasC email
  include_tasks: call_cac_script.yml
  vars:
    script_name: cac_email
    args:
      email_server_enabled: "{{ nexus_email_server_enabled }}"
      email_server_host: "{{ nexus_email_server_host }}"
      email_server_port: "{{ nexus_email_server_port }}"
      email_server_username: "{{ nexus_email_server_username }}"
      email_server_password: "{{ nexus_email_server_password }}"
      email_from_address: "{{ nexus_email_from_address }}"
      email_subject_prefix: "{{ nexus_email_subject_prefix }}"
      email_tls_enabled: "{{ nexus_email_tls_enabled }}"
      email_tls_required: "{{ nexus_email_tls_required }}"
      email_ssl_on_connect_enabled: "{{ nexus_email_ssl_on_connect_enabled }}"
      email_ssl_check_server_identity_enabled: "{{ nexus_email_ssl_check_server_identity_enabled }}"
      email_trust_store_enabled: "{{ nexus_email_trust_store_enabled }}"

- name: CasC realm
  include_tasks: call_script.yml
  vars:
    script_name: cac_realms
    args:
      nuget_api_key_realm: "{{ nexus_nuget_api_key_realm }}"
      npm_bearer_token_realm: "{{ nexus_npm_bearer_token_realm }}"
      rut_auth_realm: "{{ nexus_rut_auth_realm }}"
      ldap_realm: "{{ nexus_ldap_realm }}"
      docker_bearer_token_realm: "{{ nexus_docker_bearer_token_realm }}"

- name: CasC blobstore
  include_tasks: call_cac_script.yml
  vars:
    script_name: cac_blobstores
    args: "{{ { 'dry_run': ansible_check_mode } | combine ( { 'details': nexus_blobstores } ) }}"
    when: nexus_blobstores | length > 0

- name: get max memory definition
  shell: grep "^-Xms" "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions" | cut -c5-
  register: max_memory
  check_mode: no

- name: get min memory definition
  shell: grep "^-Xmx" "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions" | cut -c5-
  register: min_memory
  check_mode: no

- name: get max_direct memory definition
  shell: grep "^-XX:MaxDirectMemorySize=" "{{ nexus_installation_dir }}/nexus-latest/bin/nexus.vmoptions" | cut -d= -f2
  register: max_direct_memory
  check_mode: no

- set_fact:
    generic_configuration:
      require:
        nexus_download_url: "{{ nexus_download_url }}"
        # nexus_package: "{{ nexus_package }}"
        nexus_download_dir: "{{ nexus_download_dir }}"
        nexus_installation_dir: "{{ nexus_installation_dir }}"
        nexus_version: "{{ nexus_version }}"
        nexus_os_user: "{{ nexus_os_user }}"
        nexus_os_group: "{{ nexus_os_group }}"
        nexus_data_dir: "{{ nexus_data_dir }}"
        nexus_timezone: "{{ nexus_timezone }}"
        nexus_min_heap_size: "{{ nexus_min_heap_size }}"
        nexus_max_heap_size: "{{ nexus_max_heap_size }}"
        nexus_max_direct_memory: "{{ nexus_max_direct_memory }}"
        nexus_tmp_dir: "{{ nexus_tmp_dir }}"
        nexus_os_user_home_dir: "{{ nexus_os_user_home_dir }}"
        # nexus_default_settings_file: "{{ nexus_default_settings_file }}"
        nexus_default_port: "{{ nexus_default_port }}"
        nexus_default_context_path: "{{ nexus_default_context_path }}"
        nexus_application_host: "{{ nexus_application_host }}"
        nexus_os_max_filedescriptors: "{{ nexus_os_max_filedescriptors }}"
        anonymous_access: "{{ nexus_anonymous_access }}"
      current:
        nexus_min_heap_size: "{{ min_memory.stdout }}"
        nexus_max_heap_size: "{{ max_memory.stdout }}"
        nexus_max_direct_memory: "{{ max_direct_memory.stdout }}"
  check_mode: no

- name: CasC general
  include_tasks: call_cac_script.yml
  vars:
    script_name: cac_general_configurations
    args: "{{ generic_configuration }}"

- debug:
    msg: "{{ script_run }}"

- name: create final cac report
  set_fact:
    __final_cac_report:
      git:
      git_branch:
      runtime:
      git_commit_id:
      changes: "{{ cac_changes.action_details }}"
  check_mode: no

- name: save the cac report
  copy: content="{{ __final_cac_report }}" dest="{{ nexus_cac_report_file }}"
  check_mode: no
